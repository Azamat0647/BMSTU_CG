BUILD_DIR := ./build
OUT_DIR := ./out
APP_NAME := app
GENERATOR_NAME := "Unix Makefiles"
CMAKE_RELEASE_FLAGS := -DCMAKE_BUILD_TYPE=Release -DCODE_CVRG=OFF
CMAKE_TEST_FLAGS := -DCMAKE_BUILD_TYPE=Debug -DCODE_CVRG=ON
UNIT_TESTS_REPORT_NAME := report-unittesting
FUNC_TESTS_REPORT_NAME := report-functesting

cmake_release_config:
	cmake $(CMAKE_RELEASE_FLAGS) -S . -B $(BUILD_DIR) -G $(GENERATOR_NAME)

cmake_test_config:
	cmake $(CMAKE_TEST_FLAGS) -S . -B $(BUILD_DIR) -G $(GENERATOR_NAME)

build_release: cmake_release_config
	cmake --build $(BUILD_DIR) --target app

$(BUILD_DIR)/cli/cli: cmake_test_config
	cmake --build $(BUILD_DIR) --target app
	cmake --build $(BUILD_DIR) --target cli

release: build_release
	cmake --install $(BUILD_DIR) --prefix $(OUT_DIR) --config Release

run: release
	$(OUT_DIR)/$(APP_NAME)

# run_unittests:
# 	cmake $(CMAKE_TEST_FLAGS) -S . -B $(BUILD_DIR) -G $(GENERATOR_NAME)
# 	cmake --build $(BUILD_DIR) --target unit_tests
# 	ctest --test-dir $(BUILD_DIR)

run_functests: $(BUILD_DIR)/cli/cli
	bash ./func_tests/run_tests.sh $(BUILD_DIR)/cli/cli

$(UNIT_TESTS_REPORT_NAME)-latest.txt:
	echo "total code coverage: 0.00%" > $(UNIT_TESTS_REPORT_NAME)-latest.txt

$(FUNC_TESTS_REPORT_NAME)-latest.txt: run_functests
	gcovr $(BUILD_DIR) -r ./$(APP_NAME)/src --json-summary-pretty | jq .line_percent | LC_NUMERIC="en_US.UTF-8" xargs printf "total code coverage: %.2f%%" > $(FUNC_TESTS_REPORT_NAME)-latest.txt
	
format:
	find ./app/src -regex '.*\.\(cpp\|hpp\|cu\|cuh\|c\|h\)' -exec clang-format --style=Microsoft -i {} \;

checkall:
	lizard -Eduplicate

saveolds:
	cp $(UNIT_TESTS_REPORT_NAME)-latest.txt $(UNIT_TESTS_REPORT_NAME)-old.txt
	cp $(FUNC_TESTS_REPORT_NAME)-latest.txt $(FUNC_TESTS_REPORT_NAME)-old.txt

clean:
	rm -rf $(BUILD_DIR)
	rm -rf $(OUT_DIR)
	rm -rf results
	rm -f *.txt.user
	rm -f *-latest.txt
